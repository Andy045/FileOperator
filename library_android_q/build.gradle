plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'io.deepmedia.tools.publisher'
}

def config = rootProject.ext.android

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compileOnly 'androidx.core:core-ktx:1.3.2'
    compileOnly 'androidx.appcompat:appcompat:1.2.0'

    compileOnly project(':library')
    compileOnly "androidx.exifinterface:exifinterface:1.3.2"
    compileOnly 'androidx.documentfile:documentfile:1.0.1'
}

//publish {
//    repoName = 'FileOperator'
//    userOrg = 'javakam'
//    groupId = 'ando.file'
//    artifactId = 'android-q'
//    publishVersion = config.versionName
//    desc = 'FileOperator Compatible with Android Q.'
//    website = "https://github.com/javakam/${rootProject.name}"
//    //dryRun = false
//}

publisher {
    project.name = "FileOperator"
    project.description = "FileOperator Compatible with Android Q."
    project.artifact = "android-q"
    project.group = "ando.file"
    project.url = "https://github.com/javakam/${rootProject.name}"
    project.packaging = "aar"

    release.version = config.versionName
    release.tag = "v${config.versionName}"
    release.description = "${project.name}"
    sonatype("") {
    }

//    signing.key =project.findProperty(signing.keyId)
//    signing.password =project.findProperty(signing.password)
}